/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    id 'com.google.protobuf' version '0.8.15'

    id 'jacoco'

    id 'com.github.kt3k.coveralls' version '2.8.4'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()

    mavenCentral()
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

    implementation "org.java-websocket:Java-WebSocket:1.5.1"

    implementation 'com.google.protobuf:protobuf-javalite:3.10.0'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.10.0'
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

sourceSets {
    main {
        proto.srcDirs += 'src/main/protos'
        java.srcDirs += 'build/generated/source/proto/main/java' // this is a hack to get Android Studio to recognize the generated protocol buffer classes
    }
}